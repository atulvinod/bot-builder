name: Build Containers

on:
    workflow_dispatch:
    release:
        types: [published]

jobs:
    check_modified_files:
        runs-on: ubuntu-latest
        environment: production
        steps:
            - name: Checkout Branch
              uses: actions/checkout@v3
              with:
                fetch-depth: 2

            - name: Github Reference
              run: |
                echo "Ref:  -> ${{ github.ref }}"

            - name: Get modified services
              id: modified_files
              run: |
                echo "Modified files"
                git diff --name-only HEAD^ HEAD
                echo "Paths of modified files"
                git diff --name-only HEAD^ HEAD > files.txt
                
                run_upload_service=false
                run_chat_service=false
                run_embed_service=false

                while IFS= read -r file
                do
                  echo $file
                  if [[ $file == upload-service/* ]]; then
                    echo "Files modified in upload service"
                    run_upload_service=true
                  fi

                  if [[ $file == chat-service/* ]]; then
                    echo "Files modified in chat service"
                    run_chat_service=true
                  fi

                  if [[ $file == embed-service/* ]]; then
                    echo "Files modified in embed service"
                    run_embed_service=true
                  fi
                done < files.txt
                echo "Run embed service $run_embed_service"
                echo "::set-output name=run_upload_service::$run_upload_service"
                echo "::set-output name=run_chat_service::$run_chat_service"
                echo "::set-output name=run_embed_service::true"

    checkoutput:
        needs: check_modified_files
        runs-on: ubuntu-latest
        environment: production
        steps:
            - name: log
              env:
                var1: ${{needs.check_modified_files.outputs.run_embed_service}}
              run: echo "$var1"

    # build_embed_service:
    #     needs: check_modified_files
    #     runs-on: ubuntu-latest
    #     environment: production
    #     if: needs.check_modified_files.outputs.run_embed_service == 'true'
    #     steps:
    #       - name: Checkout Branch
    #         uses: actions/checkout@v3
    #         with:
    #           fetch-depth: 2

    #       - name: Login to Dockerhub
    #         uses: docker/login-action@v1
    #         with:
    #           username: ${{secrets.DOCKER_USERNAME}}
    #           password: ${{secrets.DOCKER_PASSWORD}}

    #       - name: Build Firebase Service Config
    #         uses: timheuer/base64-to-file@v1.2
    #         with:
    #           fileName: 'firebase_service_account_config.json'
    #           fileDir: './embed-service'
    #           encodedString: ${{secrets.FIREBASE_SERVICE_CONFIG}}

    #       - name: Build Embed service config
    #         uses: timheuer/base64-to-file@v1.2
    #         with:
    #           fileName: '.env'
    #           fileDir: './embed-service'
    #           encodedString: ${{secrets.ENV}}
                
    #       - name: Docker Build Embedding Service
    #         uses: docker/build-push-action@v5
    #         with:
    #           context: './embed-service'
    #           push: true
    #           tags: 'atulvinod1911/botbuilder-embed-service:latest'

    # build_chat_service:
    #   needs: check_modified_files
    #   runs-on: ubuntu-latest
    #   environment: production
    #   if : ${{needs.check_modified_files.outputs.run_chat_service=='true'}}
    #   steps:
    #     - name: Checkout Branch
    #       uses: actions/checkout@v3
    #       with:
    #         fetch-depth: 2

    #     - name: Login to Dockerhub
    #       uses: docker/login-action@v1
    #       with:
    #         username: ${{secrets.DOCKER_USERNAME}}
    #         password: ${{secrets.DOCKER_PASSWORD}}
      
    #     - name: Build Chat service config
    #       uses: timheuer/base64-to-file@v1.2
    #       with:
    #         fileName: '.env'
    #         fileDir: './chat-service'
    #         encodedString: ${{secrets.ENV}}

    #     - name: Docker Build Chat Service
    #       uses: docker/build-push-action@v5
    #       with:
    #         context: './chat-service'
    #         push: true
    #         tags: 'atulvinod1911/botbuilder-chat-service:latest'

    # build_upload_service:
    #   needs: check_modified_files
    #   runs-on: ubuntu-latest
    #   environment: production
    #   if : ${{needs.check_modified_files.outputs.run_chat_service=='true'}}
    #   steps:
    #     - name: Checkout Branch
    #       uses: actions/checkout@v3
    #       with:
    #         fetch-depth: 2

    #     - name: Login to Dockerhub
    #       uses: docker/login-action@v1
    #       with:
    #         username: ${{secrets.DOCKER_USERNAME}}
    #         password: ${{secrets.DOCKER_PASSWORD}}
      
    #     - name: Build upload service config
    #       uses: timheuer/base64-to-file@v1.2
    #       with:
    #         fileName: '.env'
    #         fileDir: './upload-service'
    #         encodedString: ${{secrets.ENV}}

    #     - name: Docker Build upload Service
    #       uses: docker/build-push-action@v5
    #       with:
    #         context: './upload-service'
    #         push: true
    #         tags: 'atulvinod1911/botbuilder-upload-service:latest'
