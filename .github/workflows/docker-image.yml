name: Build Containers

on:
    workflow_dispatch:
    release:
        types: [published]

jobs:
    check_modified_files_job:
        runs-on: ubuntu-latest
        environment: production
        steps:
            - name: Checkout Branch
              uses: actions/checkout@v3
              with:
                fetch-depth: 2

            - name: Github Reference
              run: |
                echo "Ref:  -> ${{ github.ref }}"

            - name: Get modified services
              id: check_modified_files
              run: |
                echo "Modified files"
                git diff --name-only HEAD^ HEAD
                echo "Paths of modified files"
                git diff --name-only HEAD^ HEAD > files.txt
                
                run_upload_service=false
                run_chat_service=false
                run_embed_service=false

                while IFS= read -r file
                do
                  echo $file
                  if [[ $file == upload-service/* ]]; then
                    echo "Files modified in upload service"
                    run_upload_service=true
                  fi

                  if [[ $file == chat-service/* ]]; then
                    echo "Files modified in chat service"
                    run_chat_service=true
                  fi

                  if [[ $file == embed-service/* ]]; then
                    echo "Files modified in embed service"
                    run_embed_service=true
                  fi
                done < files.txt
                              
                echo "::set-output name=run_upload_service::$run_upload_service"
                echo "::set-output name=run_chat_service::$run_chat_service"
                echo "::set-output name=run_embed_service::$run_embed_service"

    build_service:
      needs: check_modified_files_job
      runs-on: ubuntu-latest
      environment: production
      strategy:
        matrix:
          service: [upload, chat, embed]
      if: ${{ needs.check_modified_files_job.outputs["run_${{ matrix.service }}_service"] == 'true' }}
      steps:
        - name: Checkout Branch
          uses: actions/checkout@v3
          with:
            fetch-depth: 2
  
        - name: Login to Dockerhub
          uses: docker/login-action@v1
          with:
            username: ${{secrets.DOCKER_USERNAME}}
            password: ${{secrets.DOCKER_PASSWORD}}
  
        - name: Build Service config
          uses: timheuer/base64-to-file@v1.2
          with:
            fileName: '.env'
            fileDir: ./${{ matrix.service }}-service
            encodedString: ${{secrets.ENV}}
              
        - name: Build Firebase config
          uses: timheuer/base64-to-file@v1.2
          if: ${{matrix.service == 'embed'}}
          with:
            fileName: 'firebase_service_account_config.json'
            fileDir: './embed-service'
            encodedString: ${{secrets.FIREBASE_SERVICE_CONFIG}}
  
        - name: Docker Build Service
          uses: docker/build-push-action@v5
          with:
            context: ./${{ matrix.service }}-service
            push: true
            tags: 'atulvinod1911/botbuilder-${{ matrix.service }}-service:latest'